{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# The path to our CSV file\n",
    "file = \"../Resources/StackOverflow_ML.csv\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>guid/_isPermaLink</th>\n",
       "      <th>guid/__text</th>\n",
       "      <th>link</th>\n",
       "      <th>author/name/__text</th>\n",
       "      <th>category/0</th>\n",
       "      <th>category/1</th>\n",
       "      <th>category/2</th>\n",
       "      <th>category/3</th>\n",
       "      <th>category/4</th>\n",
       "      <th>title</th>\n",
       "      <th>description</th>\n",
       "      <th>pubDate</th>\n",
       "      <th>updated/__text</th>\n",
       "      <th>location/_xmlns</th>\n",
       "      <th>location/__text</th>\n",
       "      <th>category/5</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>False</td>\n",
       "      <td>295343</td>\n",
       "      <td>https://stackoverflow.com/jobs/295343/machine-...</td>\n",
       "      <td>Innate, Inc.</td>\n",
       "      <td>machine-learning</td>\n",
       "      <td>algorithm</td>\n",
       "      <td>mongodb</td>\n",
       "      <td>sql-server</td>\n",
       "      <td>amazon-web-services</td>\n",
       "      <td>Machine Learning Engineer at Innate, Inc. (Was...</td>\n",
       "      <td>&lt;p&gt;We are looking for a Machine Learning (ML) ...</td>\n",
       "      <td>Fri, 07 Feb 2020 18:52:39 Z</td>\n",
       "      <td>2020-02-07T18:52:39Z</td>\n",
       "      <td>http://stackoverflow.com/jobs/</td>\n",
       "      <td>Washington, DC</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>False</td>\n",
       "      <td>353959</td>\n",
       "      <td>https://stackoverflow.com/jobs/353959/software...</td>\n",
       "      <td>Facebook</td>\n",
       "      <td>java</td>\n",
       "      <td>c++</td>\n",
       "      <td>hadoop</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Software Engineer, Machine Learning at Faceboo...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 12 Feb 2020 17:05:10 Z</td>\n",
       "      <td>2020-02-12T17:05:10Z</td>\n",
       "      <td>http://stackoverflow.com/jobs/</td>\n",
       "      <td>New York, NY</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>False</td>\n",
       "      <td>206002</td>\n",
       "      <td>https://stackoverflow.com/jobs/206002/software...</td>\n",
       "      <td>Facebook</td>\n",
       "      <td>java</td>\n",
       "      <td>hadoop</td>\n",
       "      <td>hbase</td>\n",
       "      <td>mapreduce</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Software Engineer, Machine Learning at Faceboo...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 05 Feb 2020 11:35:27 Z</td>\n",
       "      <td>2020-02-05T11:35:27Z</td>\n",
       "      <td>http://stackoverflow.com/jobs/</td>\n",
       "      <td>Boston, MA</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>False</td>\n",
       "      <td>206001</td>\n",
       "      <td>https://stackoverflow.com/jobs/206001/software...</td>\n",
       "      <td>Facebook</td>\n",
       "      <td>java</td>\n",
       "      <td>hadoop</td>\n",
       "      <td>mapreduce</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Software Engineer, Machine Learning at Faceboo...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 05 Feb 2020 11:35:27 Z</td>\n",
       "      <td>2020-02-05T11:35:27Z</td>\n",
       "      <td>http://stackoverflow.com/jobs/</td>\n",
       "      <td>Bellevue, WA</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>False</td>\n",
       "      <td>334659</td>\n",
       "      <td>https://stackoverflow.com/jobs/334659/machine-...</td>\n",
       "      <td>Research Square</td>\n",
       "      <td>python</td>\n",
       "      <td>mysql</td>\n",
       "      <td>php</td>\n",
       "      <td>google-cloud-platform</td>\n",
       "      <td>git</td>\n",
       "      <td>Machine Learning Software Engineer (Remote, US...</td>\n",
       "      <td>&lt;p&gt;&lt;a href=\"https://www.researchsquare.com/\" r...</td>\n",
       "      <td>Tue, 04 Feb 2020 19:05:01 Z</td>\n",
       "      <td>2020-02-04T19:05:01Z</td>\n",
       "      <td>http://stackoverflow.com/jobs/</td>\n",
       "      <td>Durham, NC</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   guid/_isPermaLink  guid/__text  \\\n",
       "0              False       295343   \n",
       "1              False       353959   \n",
       "2              False       206002   \n",
       "3              False       206001   \n",
       "4              False       334659   \n",
       "\n",
       "                                                link author/name/__text  \\\n",
       "0  https://stackoverflow.com/jobs/295343/machine-...       Innate, Inc.   \n",
       "1  https://stackoverflow.com/jobs/353959/software...           Facebook   \n",
       "2  https://stackoverflow.com/jobs/206002/software...           Facebook   \n",
       "3  https://stackoverflow.com/jobs/206001/software...           Facebook   \n",
       "4  https://stackoverflow.com/jobs/334659/machine-...    Research Square   \n",
       "\n",
       "         category/0 category/1 category/2             category/3  \\\n",
       "0  machine-learning  algorithm    mongodb             sql-server   \n",
       "1              java        c++     hadoop                    NaN   \n",
       "2              java     hadoop      hbase              mapreduce   \n",
       "3              java     hadoop  mapreduce                    NaN   \n",
       "4            python      mysql        php  google-cloud-platform   \n",
       "\n",
       "            category/4                                              title  \\\n",
       "0  amazon-web-services  Machine Learning Engineer at Innate, Inc. (Was...   \n",
       "1                  NaN  Software Engineer, Machine Learning at Faceboo...   \n",
       "2                  NaN  Software Engineer, Machine Learning at Faceboo...   \n",
       "3                  NaN  Software Engineer, Machine Learning at Faceboo...   \n",
       "4                  git  Machine Learning Software Engineer (Remote, US...   \n",
       "\n",
       "                                         description  \\\n",
       "0  <p>We are looking for a Machine Learning (ML) ...   \n",
       "1  <p>Facebook's mission is to give people the po...   \n",
       "2  <p>Facebook's mission is to give people the po...   \n",
       "3  <p>Facebook's mission is to give people the po...   \n",
       "4  <p><a href=\"https://www.researchsquare.com/\" r...   \n",
       "\n",
       "                       pubDate        updated/__text  \\\n",
       "0  Fri, 07 Feb 2020 18:52:39 Z  2020-02-07T18:52:39Z   \n",
       "1  Wed, 12 Feb 2020 17:05:10 Z  2020-02-12T17:05:10Z   \n",
       "2  Wed, 05 Feb 2020 11:35:27 Z  2020-02-05T11:35:27Z   \n",
       "3  Wed, 05 Feb 2020 11:35:27 Z  2020-02-05T11:35:27Z   \n",
       "4  Tue, 04 Feb 2020 19:05:01 Z  2020-02-04T19:05:01Z   \n",
       "\n",
       "                  location/_xmlns location/__text category/5  \n",
       "0  http://stackoverflow.com/jobs/  Washington, DC        NaN  \n",
       "1  http://stackoverflow.com/jobs/    New York, NY        NaN  \n",
       "2  http://stackoverflow.com/jobs/      Boston, MA        NaN  \n",
       "3  http://stackoverflow.com/jobs/    Bellevue, WA        NaN  \n",
       "4  http://stackoverflow.com/jobs/      Durham, NC        NaN  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Read our Kickstarter data into pandas\n",
    "df = pd.read_csv(file)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['guid/_isPermaLink', 'guid/__text', 'link', 'author/name/__text',\n",
       "       'category/0', 'category/1', 'category/2', 'category/3', 'category/4',\n",
       "       'title', 'description', 'pubDate', 'updated/__text', 'location/_xmlns',\n",
       "       'location/__text', 'category/5'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Get a list of all of our columns for easy reference\n",
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>author/name/__text</th>\n",
       "      <th>category/0</th>\n",
       "      <th>category/1</th>\n",
       "      <th>category/2</th>\n",
       "      <th>category/3</th>\n",
       "      <th>category/4</th>\n",
       "      <th>title</th>\n",
       "      <th>description</th>\n",
       "      <th>pubDate</th>\n",
       "      <th>location/__text</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Innate, Inc.</td>\n",
       "      <td>machine-learning</td>\n",
       "      <td>algorithm</td>\n",
       "      <td>mongodb</td>\n",
       "      <td>sql-server</td>\n",
       "      <td>amazon-web-services</td>\n",
       "      <td>Machine Learning Engineer at Innate, Inc. (Was...</td>\n",
       "      <td>&lt;p&gt;We are looking for a Machine Learning (ML) ...</td>\n",
       "      <td>Fri, 07 Feb 2020 18:52:39 Z</td>\n",
       "      <td>Washington, DC</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>java</td>\n",
       "      <td>c++</td>\n",
       "      <td>hadoop</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Software Engineer, Machine Learning at Faceboo...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 12 Feb 2020 17:05:10 Z</td>\n",
       "      <td>New York, NY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>java</td>\n",
       "      <td>hadoop</td>\n",
       "      <td>hbase</td>\n",
       "      <td>mapreduce</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Software Engineer, Machine Learning at Faceboo...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 05 Feb 2020 11:35:27 Z</td>\n",
       "      <td>Boston, MA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>java</td>\n",
       "      <td>hadoop</td>\n",
       "      <td>mapreduce</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Software Engineer, Machine Learning at Faceboo...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 05 Feb 2020 11:35:27 Z</td>\n",
       "      <td>Bellevue, WA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Research Square</td>\n",
       "      <td>python</td>\n",
       "      <td>mysql</td>\n",
       "      <td>php</td>\n",
       "      <td>google-cloud-platform</td>\n",
       "      <td>git</td>\n",
       "      <td>Machine Learning Software Engineer (Remote, US...</td>\n",
       "      <td>&lt;p&gt;&lt;a href=\"https://www.researchsquare.com/\" r...</td>\n",
       "      <td>Tue, 04 Feb 2020 19:05:01 Z</td>\n",
       "      <td>Durham, NC</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>507</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>web-services</td>\n",
       "      <td>c++</td>\n",
       "      <td>python</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Production Engineer at Facebook (Boston, MA)</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 22 Jan 2020 20:50:24 Z</td>\n",
       "      <td>Boston, MA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>508</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>r</td>\n",
       "      <td>sql</td>\n",
       "      <td>hadoop</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Data Science Manager, Analytics Ads &amp; Business...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 22 Jan 2020 20:50:57 Z</td>\n",
       "      <td>Menlo Park, CA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>509</th>\n",
       "      <td>MasterPeace Solutions</td>\n",
       "      <td>user-experience</td>\n",
       "      <td>css</td>\n",
       "      <td>photoshop</td>\n",
       "      <td>adobe-illustrator</td>\n",
       "      <td>html</td>\n",
       "      <td>User Experience (UX) Designer Fully Cleared at...</td>\n",
       "      <td>&lt;p&gt;MasterPeace Solutions is seeking a &lt;strong&gt;...</td>\n",
       "      <td>Thu, 16 Jan 2020 14:43:47 Z</td>\n",
       "      <td>Annapolis Junction, MD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>510</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>security</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Privacy Program Manager, Product at Facebook (...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 05 Feb 2020 11:35:24 Z</td>\n",
       "      <td>Menlo Park, CA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>511</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>web-services</td>\n",
       "      <td>java</td>\n",
       "      <td>spring</td>\n",
       "      <td>swing</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Manager, Production Engineering at Facebook (B...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Thu, 06 Feb 2020 01:25:01 Z</td>\n",
       "      <td>Boston, MA</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>512 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        author/name/__text        category/0 category/1 category/2  \\\n",
       "0             Innate, Inc.  machine-learning  algorithm    mongodb   \n",
       "1                 Facebook              java        c++     hadoop   \n",
       "2                 Facebook              java     hadoop      hbase   \n",
       "3                 Facebook              java     hadoop  mapreduce   \n",
       "4          Research Square            python      mysql        php   \n",
       "..                     ...               ...        ...        ...   \n",
       "507               Facebook      web-services        c++     python   \n",
       "508               Facebook                 r        sql     hadoop   \n",
       "509  MasterPeace Solutions   user-experience        css  photoshop   \n",
       "510               Facebook          security        NaN        NaN   \n",
       "511               Facebook      web-services       java     spring   \n",
       "\n",
       "                category/3           category/4  \\\n",
       "0               sql-server  amazon-web-services   \n",
       "1                      NaN                  NaN   \n",
       "2                mapreduce                  NaN   \n",
       "3                      NaN                  NaN   \n",
       "4    google-cloud-platform                  git   \n",
       "..                     ...                  ...   \n",
       "507                    NaN                  NaN   \n",
       "508                    NaN                  NaN   \n",
       "509      adobe-illustrator                 html   \n",
       "510                    NaN                  NaN   \n",
       "511                  swing                  NaN   \n",
       "\n",
       "                                                 title  \\\n",
       "0    Machine Learning Engineer at Innate, Inc. (Was...   \n",
       "1    Software Engineer, Machine Learning at Faceboo...   \n",
       "2    Software Engineer, Machine Learning at Faceboo...   \n",
       "3    Software Engineer, Machine Learning at Faceboo...   \n",
       "4    Machine Learning Software Engineer (Remote, US...   \n",
       "..                                                 ...   \n",
       "507       Production Engineer at Facebook (Boston, MA)   \n",
       "508  Data Science Manager, Analytics Ads & Business...   \n",
       "509  User Experience (UX) Designer Fully Cleared at...   \n",
       "510  Privacy Program Manager, Product at Facebook (...   \n",
       "511  Manager, Production Engineering at Facebook (B...   \n",
       "\n",
       "                                           description  \\\n",
       "0    <p>We are looking for a Machine Learning (ML) ...   \n",
       "1    <p>Facebook's mission is to give people the po...   \n",
       "2    <p>Facebook's mission is to give people the po...   \n",
       "3    <p>Facebook's mission is to give people the po...   \n",
       "4    <p><a href=\"https://www.researchsquare.com/\" r...   \n",
       "..                                                 ...   \n",
       "507  <p>Facebook's mission is to give people the po...   \n",
       "508  <p>Facebook's mission is to give people the po...   \n",
       "509  <p>MasterPeace Solutions is seeking a <strong>...   \n",
       "510  <p>Facebook's mission is to give people the po...   \n",
       "511  <p>Facebook's mission is to give people the po...   \n",
       "\n",
       "                         pubDate         location/__text  \n",
       "0    Fri, 07 Feb 2020 18:52:39 Z          Washington, DC  \n",
       "1    Wed, 12 Feb 2020 17:05:10 Z            New York, NY  \n",
       "2    Wed, 05 Feb 2020 11:35:27 Z              Boston, MA  \n",
       "3    Wed, 05 Feb 2020 11:35:27 Z            Bellevue, WA  \n",
       "4    Tue, 04 Feb 2020 19:05:01 Z              Durham, NC  \n",
       "..                           ...                     ...  \n",
       "507  Wed, 22 Jan 2020 20:50:24 Z              Boston, MA  \n",
       "508  Wed, 22 Jan 2020 20:50:57 Z          Menlo Park, CA  \n",
       "509  Thu, 16 Jan 2020 14:43:47 Z  Annapolis Junction, MD  \n",
       "510  Wed, 05 Feb 2020 11:35:24 Z          Menlo Park, CA  \n",
       "511  Thu, 06 Feb 2020 01:25:01 Z              Boston, MA  \n",
       "\n",
       "[512 rows x 10 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Extract 'author/name/__text','category/0', 'category/1', 'category/2', 'category/3', 'category/4',\n",
    "#'title', 'description', 'pubDate','location/__text',\n",
    "\n",
    "reduced_so_ml_df = df.loc[:, [\"author/name/__text\",\"category/0\", \"category/1\", \"category/2\", \"category/3\", \"category/4\",\n",
    "\"title\", \"description\", \"pubDate\",\"location/__text\"]]\n",
    "reduced_so_ml_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "reduced_so_ml_df=reduced_so_ml_df.rename(columns={\"author/name/__text\": \"company\", \"location/__text\": \"location\"})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Splitting 'location' column into two different columns :\n",
      "                       0    1\n",
      "0            Washington   DC\n",
      "1              New York   NY\n",
      "2                Boston   MA\n",
      "3              Bellevue   WA\n",
      "4                Durham   NC\n",
      "..                  ...  ...\n",
      "507              Boston   MA\n",
      "508          Menlo Park   CA\n",
      "509  Annapolis Junction   MD\n",
      "510          Menlo Park   CA\n",
      "511              Boston   MA\n",
      "\n",
      "[512 rows x 2 columns]\n"
     ]
    }
   ],
   "source": [
    "print(\"\\nSplitting 'location' column into two different columns :\\n\", \n",
    "                                  reduced_so_ml_df[\"location\"].str.split(\",\",expand=True))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "reduced_so_ml_df[['city','state']]=reduced_so_ml_df[\"location\"].str.split(\",\",expand=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>company</th>\n",
       "      <th>category/0</th>\n",
       "      <th>category/1</th>\n",
       "      <th>category/2</th>\n",
       "      <th>category/3</th>\n",
       "      <th>category/4</th>\n",
       "      <th>title</th>\n",
       "      <th>description</th>\n",
       "      <th>pubDate</th>\n",
       "      <th>location</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Innate, Inc.</td>\n",
       "      <td>machine-learning</td>\n",
       "      <td>algorithm</td>\n",
       "      <td>mongodb</td>\n",
       "      <td>sql-server</td>\n",
       "      <td>amazon-web-services</td>\n",
       "      <td>Machine Learning Engineer at Innate, Inc. (Was...</td>\n",
       "      <td>&lt;p&gt;We are looking for a Machine Learning (ML) ...</td>\n",
       "      <td>Fri, 07 Feb 2020 18:52:39 Z</td>\n",
       "      <td>Washington, DC</td>\n",
       "      <td>Washington</td>\n",
       "      <td>DC</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>java</td>\n",
       "      <td>c++</td>\n",
       "      <td>hadoop</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Software Engineer, Machine Learning at Faceboo...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 12 Feb 2020 17:05:10 Z</td>\n",
       "      <td>New York, NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>NY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>java</td>\n",
       "      <td>hadoop</td>\n",
       "      <td>hbase</td>\n",
       "      <td>mapreduce</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Software Engineer, Machine Learning at Faceboo...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 05 Feb 2020 11:35:27 Z</td>\n",
       "      <td>Boston, MA</td>\n",
       "      <td>Boston</td>\n",
       "      <td>MA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>java</td>\n",
       "      <td>hadoop</td>\n",
       "      <td>mapreduce</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Software Engineer, Machine Learning at Faceboo...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 05 Feb 2020 11:35:27 Z</td>\n",
       "      <td>Bellevue, WA</td>\n",
       "      <td>Bellevue</td>\n",
       "      <td>WA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Research Square</td>\n",
       "      <td>python</td>\n",
       "      <td>mysql</td>\n",
       "      <td>php</td>\n",
       "      <td>google-cloud-platform</td>\n",
       "      <td>git</td>\n",
       "      <td>Machine Learning Software Engineer (Remote, US...</td>\n",
       "      <td>&lt;p&gt;&lt;a href=\"https://www.researchsquare.com/\" r...</td>\n",
       "      <td>Tue, 04 Feb 2020 19:05:01 Z</td>\n",
       "      <td>Durham, NC</td>\n",
       "      <td>Durham</td>\n",
       "      <td>NC</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>507</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>web-services</td>\n",
       "      <td>c++</td>\n",
       "      <td>python</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Production Engineer at Facebook (Boston, MA)</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 22 Jan 2020 20:50:24 Z</td>\n",
       "      <td>Boston, MA</td>\n",
       "      <td>Boston</td>\n",
       "      <td>MA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>508</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>r</td>\n",
       "      <td>sql</td>\n",
       "      <td>hadoop</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Data Science Manager, Analytics Ads &amp; Business...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 22 Jan 2020 20:50:57 Z</td>\n",
       "      <td>Menlo Park, CA</td>\n",
       "      <td>Menlo Park</td>\n",
       "      <td>CA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>509</th>\n",
       "      <td>MasterPeace Solutions</td>\n",
       "      <td>user-experience</td>\n",
       "      <td>css</td>\n",
       "      <td>photoshop</td>\n",
       "      <td>adobe-illustrator</td>\n",
       "      <td>html</td>\n",
       "      <td>User Experience (UX) Designer Fully Cleared at...</td>\n",
       "      <td>&lt;p&gt;MasterPeace Solutions is seeking a &lt;strong&gt;...</td>\n",
       "      <td>Thu, 16 Jan 2020 14:43:47 Z</td>\n",
       "      <td>Annapolis Junction, MD</td>\n",
       "      <td>Annapolis Junction</td>\n",
       "      <td>MD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>510</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>security</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Privacy Program Manager, Product at Facebook (...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 05 Feb 2020 11:35:24 Z</td>\n",
       "      <td>Menlo Park, CA</td>\n",
       "      <td>Menlo Park</td>\n",
       "      <td>CA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>511</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>web-services</td>\n",
       "      <td>java</td>\n",
       "      <td>spring</td>\n",
       "      <td>swing</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Manager, Production Engineering at Facebook (B...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Thu, 06 Feb 2020 01:25:01 Z</td>\n",
       "      <td>Boston, MA</td>\n",
       "      <td>Boston</td>\n",
       "      <td>MA</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>512 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                   company        category/0 category/1 category/2  \\\n",
       "0             Innate, Inc.  machine-learning  algorithm    mongodb   \n",
       "1                 Facebook              java        c++     hadoop   \n",
       "2                 Facebook              java     hadoop      hbase   \n",
       "3                 Facebook              java     hadoop  mapreduce   \n",
       "4          Research Square            python      mysql        php   \n",
       "..                     ...               ...        ...        ...   \n",
       "507               Facebook      web-services        c++     python   \n",
       "508               Facebook                 r        sql     hadoop   \n",
       "509  MasterPeace Solutions   user-experience        css  photoshop   \n",
       "510               Facebook          security        NaN        NaN   \n",
       "511               Facebook      web-services       java     spring   \n",
       "\n",
       "                category/3           category/4  \\\n",
       "0               sql-server  amazon-web-services   \n",
       "1                      NaN                  NaN   \n",
       "2                mapreduce                  NaN   \n",
       "3                      NaN                  NaN   \n",
       "4    google-cloud-platform                  git   \n",
       "..                     ...                  ...   \n",
       "507                    NaN                  NaN   \n",
       "508                    NaN                  NaN   \n",
       "509      adobe-illustrator                 html   \n",
       "510                    NaN                  NaN   \n",
       "511                  swing                  NaN   \n",
       "\n",
       "                                                 title  \\\n",
       "0    Machine Learning Engineer at Innate, Inc. (Was...   \n",
       "1    Software Engineer, Machine Learning at Faceboo...   \n",
       "2    Software Engineer, Machine Learning at Faceboo...   \n",
       "3    Software Engineer, Machine Learning at Faceboo...   \n",
       "4    Machine Learning Software Engineer (Remote, US...   \n",
       "..                                                 ...   \n",
       "507       Production Engineer at Facebook (Boston, MA)   \n",
       "508  Data Science Manager, Analytics Ads & Business...   \n",
       "509  User Experience (UX) Designer Fully Cleared at...   \n",
       "510  Privacy Program Manager, Product at Facebook (...   \n",
       "511  Manager, Production Engineering at Facebook (B...   \n",
       "\n",
       "                                           description  \\\n",
       "0    <p>We are looking for a Machine Learning (ML) ...   \n",
       "1    <p>Facebook's mission is to give people the po...   \n",
       "2    <p>Facebook's mission is to give people the po...   \n",
       "3    <p>Facebook's mission is to give people the po...   \n",
       "4    <p><a href=\"https://www.researchsquare.com/\" r...   \n",
       "..                                                 ...   \n",
       "507  <p>Facebook's mission is to give people the po...   \n",
       "508  <p>Facebook's mission is to give people the po...   \n",
       "509  <p>MasterPeace Solutions is seeking a <strong>...   \n",
       "510  <p>Facebook's mission is to give people the po...   \n",
       "511  <p>Facebook's mission is to give people the po...   \n",
       "\n",
       "                         pubDate                location                city  \\\n",
       "0    Fri, 07 Feb 2020 18:52:39 Z          Washington, DC          Washington   \n",
       "1    Wed, 12 Feb 2020 17:05:10 Z            New York, NY            New York   \n",
       "2    Wed, 05 Feb 2020 11:35:27 Z              Boston, MA              Boston   \n",
       "3    Wed, 05 Feb 2020 11:35:27 Z            Bellevue, WA            Bellevue   \n",
       "4    Tue, 04 Feb 2020 19:05:01 Z              Durham, NC              Durham   \n",
       "..                           ...                     ...                 ...   \n",
       "507  Wed, 22 Jan 2020 20:50:24 Z              Boston, MA              Boston   \n",
       "508  Wed, 22 Jan 2020 20:50:57 Z          Menlo Park, CA          Menlo Park   \n",
       "509  Thu, 16 Jan 2020 14:43:47 Z  Annapolis Junction, MD  Annapolis Junction   \n",
       "510  Wed, 05 Feb 2020 11:35:24 Z          Menlo Park, CA          Menlo Park   \n",
       "511  Thu, 06 Feb 2020 01:25:01 Z              Boston, MA              Boston   \n",
       "\n",
       "    state  \n",
       "0      DC  \n",
       "1      NY  \n",
       "2      MA  \n",
       "3      WA  \n",
       "4      NC  \n",
       "..    ...  \n",
       "507    MA  \n",
       "508    CA  \n",
       "509    MD  \n",
       "510    CA  \n",
       "511    MA  \n",
       "\n",
       "[512 rows x 12 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reduced_so_ml_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "state\n",
       " AR      1\n",
       " AZ      1\n",
       " CA    221\n",
       " CO      8\n",
       " DC     15\n",
       " FL      1\n",
       " GA      3\n",
       " IA      1\n",
       " ID      3\n",
       " IL     20\n",
       " IN      1\n",
       " KY      1\n",
       " MA     28\n",
       " MD     12\n",
       " MI      3\n",
       " MO      1\n",
       " NC      7\n",
       " NJ      8\n",
       " NM      1\n",
       " NV      1\n",
       " NY     52\n",
       " OH      9\n",
       " OR      3\n",
       " PA     11\n",
       " RI      2\n",
       " SC      1\n",
       " TN      1\n",
       " TX     18\n",
       " UK     14\n",
       " UT      9\n",
       " VA     17\n",
       " WA     38\n",
       "Name: city, dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "state_groups =reduced_so_ml_df.groupby(\"state\")\n",
    "state_groups[\"city\"].count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "#plt.bar(state_groups.index, job_cnt, color='r', alpha=0.5, align=\"center\")\n",
    "job_count=state_groups.count()\n",
    "job_cnt=job_count['city']\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([0,\n",
       "  1,\n",
       "  2,\n",
       "  3,\n",
       "  4,\n",
       "  5,\n",
       "  6,\n",
       "  7,\n",
       "  8,\n",
       "  9,\n",
       "  10,\n",
       "  11,\n",
       "  12,\n",
       "  13,\n",
       "  14,\n",
       "  15,\n",
       "  16,\n",
       "  17,\n",
       "  18,\n",
       "  19,\n",
       "  20,\n",
       "  21,\n",
       "  22,\n",
       "  23,\n",
       "  24,\n",
       "  25,\n",
       "  26,\n",
       "  27,\n",
       "  28,\n",
       "  29,\n",
       "  30,\n",
       "  31],\n",
       " <a list of 32 Text xticklabel objects>)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.bar(job_count.index, job_count['city'], color='b', alpha=0.5, align=\"center\")\n",
    "\n",
    "plt.xlim(-0.75, len(job_count.index))\n",
    "plt.ylim(0, max(job_count['city'])+50)\n",
    "plt.title(\"job count by State/Country\")\n",
    "plt.xlabel(\"State/Country\")\n",
    "plt.ylabel(\"Number of Jobs\")\n",
    "\n",
    "plt.xticks(rotation=45)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "df=reduced_so_ml_df.loc[:, [\"company\",\"title\", \"description\", \"city\",\"state\"]]\n",
    "df.to_csv(\"../Resources/clean_data.csv\",index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
