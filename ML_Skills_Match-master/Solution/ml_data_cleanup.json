{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# The path to our CSV file\n",
    "file = \"../Resources/StackOverflow_ML.csv\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>guid/_isPermaLink</th>\n",
       "      <th>guid/__text</th>\n",
       "      <th>link</th>\n",
       "      <th>author/name/__text</th>\n",
       "      <th>category/0</th>\n",
       "      <th>category/1</th>\n",
       "      <th>category/2</th>\n",
       "      <th>category/3</th>\n",
       "      <th>category/4</th>\n",
       "      <th>title</th>\n",
       "      <th>description</th>\n",
       "      <th>pubDate</th>\n",
       "      <th>updated/__text</th>\n",
       "      <th>location/_xmlns</th>\n",
       "      <th>location/__text</th>\n",
       "      <th>category/5</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>False</td>\n",
       "      <td>363701</td>\n",
       "      <td>https://stackoverflow.com/jobs/363701/paid-res...</td>\n",
       "      <td>User Research International</td>\n",
       "      <td>.net</td>\n",
       "      <td>c#</td>\n",
       "      <td>machine-learning</td>\n",
       "      <td>ml.net</td>\n",
       "      <td>ml.net-model-builder</td>\n",
       "      <td>Paid Research Study for .NET Developers with M...</td>\n",
       "      <td>&lt;p&gt;User Research International is a research c...</td>\n",
       "      <td>Thu, 13 Feb 2020 23:13:27 Z</td>\n",
       "      <td>2020-02-13T23:13:27Z</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>False</td>\n",
       "      <td>352314</td>\n",
       "      <td>https://stackoverflow.com/jobs/352314/applied-...</td>\n",
       "      <td>Medmain Inc.</td>\n",
       "      <td>python</td>\n",
       "      <td>api</td>\n",
       "      <td>machine-learning</td>\n",
       "      <td>amazon-web-services</td>\n",
       "      <td>backend</td>\n",
       "      <td>Applied Machine Learning Engineer/Working in J...</td>\n",
       "      <td>&lt;p&gt;&lt;strong&gt;Non-Japanese speakers welcomed!&lt;/st...</td>\n",
       "      <td>Mon, 20 Jan 2020 03:53:01 Z</td>\n",
       "      <td>2020-01-20T03:53:01Z</td>\n",
       "      <td>http://stackoverflow.com/jobs/</td>\n",
       "      <td>Tokyo, Japan</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>False</td>\n",
       "      <td>312950</td>\n",
       "      <td>https://stackoverflow.com/jobs/312950/machine-...</td>\n",
       "      <td>DC Frontiers Pte Ltd.</td>\n",
       "      <td>python</td>\n",
       "      <td>node.js</td>\n",
       "      <td>typescript</td>\n",
       "      <td>c#</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Machine Learning Programmer at DC Frontiers Pt...</td>\n",
       "      <td>&lt;p&gt;We are looking for an individual with exper...</td>\n",
       "      <td>Mon, 03 Feb 2020 09:59:20 Z</td>\n",
       "      <td>2020-02-03T09:59:20Z</td>\n",
       "      <td>http://stackoverflow.com/jobs/</td>\n",
       "      <td>Singapore</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>False</td>\n",
       "      <td>295343</td>\n",
       "      <td>https://stackoverflow.com/jobs/295343/machine-...</td>\n",
       "      <td>Innate, Inc.</td>\n",
       "      <td>machine-learning</td>\n",
       "      <td>algorithm</td>\n",
       "      <td>mongodb</td>\n",
       "      <td>sql-server</td>\n",
       "      <td>amazon-web-services</td>\n",
       "      <td>Machine Learning Engineer at Innate, Inc. (Was...</td>\n",
       "      <td>&lt;p&gt;We are looking for a Machine Learning (ML) ...</td>\n",
       "      <td>Fri, 07 Feb 2020 18:52:39 Z</td>\n",
       "      <td>2020-02-07T18:52:39Z</td>\n",
       "      <td>http://stackoverflow.com/jobs/</td>\n",
       "      <td>Washington, DC</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>False</td>\n",
       "      <td>353959</td>\n",
       "      <td>https://stackoverflow.com/jobs/353959/software...</td>\n",
       "      <td>Facebook</td>\n",
       "      <td>java</td>\n",
       "      <td>c++</td>\n",
       "      <td>hadoop</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Software Engineer, Machine Learning at Faceboo...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 12 Feb 2020 17:05:10 Z</td>\n",
       "      <td>2020-02-12T17:05:10Z</td>\n",
       "      <td>http://stackoverflow.com/jobs/</td>\n",
       "      <td>New York, NY</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   guid/_isPermaLink  guid/__text  \\\n",
       "0              False       363701   \n",
       "1              False       352314   \n",
       "2              False       312950   \n",
       "3              False       295343   \n",
       "4              False       353959   \n",
       "\n",
       "                                                link  \\\n",
       "0  https://stackoverflow.com/jobs/363701/paid-res...   \n",
       "1  https://stackoverflow.com/jobs/352314/applied-...   \n",
       "2  https://stackoverflow.com/jobs/312950/machine-...   \n",
       "3  https://stackoverflow.com/jobs/295343/machine-...   \n",
       "4  https://stackoverflow.com/jobs/353959/software...   \n",
       "\n",
       "            author/name/__text        category/0 category/1        category/2  \\\n",
       "0  User Research International              .net         c#  machine-learning   \n",
       "1                 Medmain Inc.            python        api  machine-learning   \n",
       "2        DC Frontiers Pte Ltd.            python    node.js        typescript   \n",
       "3                 Innate, Inc.  machine-learning  algorithm           mongodb   \n",
       "4                     Facebook              java        c++            hadoop   \n",
       "\n",
       "            category/3            category/4  \\\n",
       "0               ml.net  ml.net-model-builder   \n",
       "1  amazon-web-services               backend   \n",
       "2                   c#                   NaN   \n",
       "3           sql-server   amazon-web-services   \n",
       "4                  NaN                   NaN   \n",
       "\n",
       "                                               title  \\\n",
       "0  Paid Research Study for .NET Developers with M...   \n",
       "1  Applied Machine Learning Engineer/Working in J...   \n",
       "2  Machine Learning Programmer at DC Frontiers Pt...   \n",
       "3  Machine Learning Engineer at Innate, Inc. (Was...   \n",
       "4  Software Engineer, Machine Learning at Faceboo...   \n",
       "\n",
       "                                         description  \\\n",
       "0  <p>User Research International is a research c...   \n",
       "1  <p><strong>Non-Japanese speakers welcomed!</st...   \n",
       "2  <p>We are looking for an individual with exper...   \n",
       "3  <p>We are looking for a Machine Learning (ML) ...   \n",
       "4  <p>Facebook's mission is to give people the po...   \n",
       "\n",
       "                       pubDate        updated/__text  \\\n",
       "0  Thu, 13 Feb 2020 23:13:27 Z  2020-02-13T23:13:27Z   \n",
       "1  Mon, 20 Jan 2020 03:53:01 Z  2020-01-20T03:53:01Z   \n",
       "2  Mon, 03 Feb 2020 09:59:20 Z  2020-02-03T09:59:20Z   \n",
       "3  Fri, 07 Feb 2020 18:52:39 Z  2020-02-07T18:52:39Z   \n",
       "4  Wed, 12 Feb 2020 17:05:10 Z  2020-02-12T17:05:10Z   \n",
       "\n",
       "                  location/_xmlns location/__text category/5  \n",
       "0                             NaN             NaN        NaN  \n",
       "1  http://stackoverflow.com/jobs/    Tokyo, Japan        NaN  \n",
       "2  http://stackoverflow.com/jobs/       Singapore        NaN  \n",
       "3  http://stackoverflow.com/jobs/  Washington, DC        NaN  \n",
       "4  http://stackoverflow.com/jobs/    New York, NY        NaN  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Read our Kickstarter data into pandas\n",
    "df = pd.read_csv(file)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['guid/_isPermaLink', 'guid/__text', 'link', 'author/name/__text',\n",
       "       'category/0', 'category/1', 'category/2', 'category/3', 'category/4',\n",
       "       'title', 'description', 'pubDate', 'updated/__text', 'location/_xmlns',\n",
       "       'location/__text', 'category/5'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Get a list of all of our columns for easy reference\n",
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>author/name/__text</th>\n",
       "      <th>category/0</th>\n",
       "      <th>category/1</th>\n",
       "      <th>category/2</th>\n",
       "      <th>category/3</th>\n",
       "      <th>category/4</th>\n",
       "      <th>title</th>\n",
       "      <th>description</th>\n",
       "      <th>pubDate</th>\n",
       "      <th>location/__text</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>User Research International</td>\n",
       "      <td>.net</td>\n",
       "      <td>c#</td>\n",
       "      <td>machine-learning</td>\n",
       "      <td>ml.net</td>\n",
       "      <td>ml.net-model-builder</td>\n",
       "      <td>Paid Research Study for .NET Developers with M...</td>\n",
       "      <td>&lt;p&gt;User Research International is a research c...</td>\n",
       "      <td>Thu, 13 Feb 2020 23:13:27 Z</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Medmain Inc.</td>\n",
       "      <td>python</td>\n",
       "      <td>api</td>\n",
       "      <td>machine-learning</td>\n",
       "      <td>amazon-web-services</td>\n",
       "      <td>backend</td>\n",
       "      <td>Applied Machine Learning Engineer/Working in J...</td>\n",
       "      <td>&lt;p&gt;&lt;strong&gt;Non-Japanese speakers welcomed!&lt;/st...</td>\n",
       "      <td>Mon, 20 Jan 2020 03:53:01 Z</td>\n",
       "      <td>Tokyo, Japan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>DC Frontiers Pte Ltd.</td>\n",
       "      <td>python</td>\n",
       "      <td>node.js</td>\n",
       "      <td>typescript</td>\n",
       "      <td>c#</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Machine Learning Programmer at DC Frontiers Pt...</td>\n",
       "      <td>&lt;p&gt;We are looking for an individual with exper...</td>\n",
       "      <td>Mon, 03 Feb 2020 09:59:20 Z</td>\n",
       "      <td>Singapore</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Innate, Inc.</td>\n",
       "      <td>machine-learning</td>\n",
       "      <td>algorithm</td>\n",
       "      <td>mongodb</td>\n",
       "      <td>sql-server</td>\n",
       "      <td>amazon-web-services</td>\n",
       "      <td>Machine Learning Engineer at Innate, Inc. (Was...</td>\n",
       "      <td>&lt;p&gt;We are looking for a Machine Learning (ML) ...</td>\n",
       "      <td>Fri, 07 Feb 2020 18:52:39 Z</td>\n",
       "      <td>Washington, DC</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>java</td>\n",
       "      <td>c++</td>\n",
       "      <td>hadoop</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Software Engineer, Machine Learning at Faceboo...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 12 Feb 2020 17:05:10 Z</td>\n",
       "      <td>New York, NY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>614</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>web-services</td>\n",
       "      <td>c++</td>\n",
       "      <td>python</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Production Engineer at Facebook (Boston, MA)</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 22 Jan 2020 20:50:24 Z</td>\n",
       "      <td>Boston, MA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>615</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>r</td>\n",
       "      <td>sql</td>\n",
       "      <td>hadoop</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Data Science Manager, Analytics Ads &amp; Business...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 22 Jan 2020 20:50:57 Z</td>\n",
       "      <td>Menlo Park, CA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>616</th>\n",
       "      <td>MasterPeace Solutions</td>\n",
       "      <td>user-experience</td>\n",
       "      <td>css</td>\n",
       "      <td>photoshop</td>\n",
       "      <td>adobe-illustrator</td>\n",
       "      <td>html</td>\n",
       "      <td>User Experience (UX) Designer Fully Cleared at...</td>\n",
       "      <td>&lt;p&gt;MasterPeace Solutions is seeking a &lt;strong&gt;...</td>\n",
       "      <td>Thu, 16 Jan 2020 14:43:47 Z</td>\n",
       "      <td>Annapolis Junction, MD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>617</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>security</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Privacy Program Manager, Product at Facebook (...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 05 Feb 2020 11:35:24 Z</td>\n",
       "      <td>Menlo Park, CA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>618</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>web-services</td>\n",
       "      <td>java</td>\n",
       "      <td>spring</td>\n",
       "      <td>swing</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Manager, Production Engineering at Facebook (B...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Thu, 06 Feb 2020 01:25:01 Z</td>\n",
       "      <td>Boston, MA</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>619 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              author/name/__text        category/0 category/1  \\\n",
       "0    User Research International              .net         c#   \n",
       "1                   Medmain Inc.            python        api   \n",
       "2          DC Frontiers Pte Ltd.            python    node.js   \n",
       "3                   Innate, Inc.  machine-learning  algorithm   \n",
       "4                       Facebook              java        c++   \n",
       "..                           ...               ...        ...   \n",
       "614                     Facebook      web-services        c++   \n",
       "615                     Facebook                 r        sql   \n",
       "616        MasterPeace Solutions   user-experience        css   \n",
       "617                     Facebook          security        NaN   \n",
       "618                     Facebook      web-services       java   \n",
       "\n",
       "           category/2           category/3            category/4  \\\n",
       "0    machine-learning               ml.net  ml.net-model-builder   \n",
       "1    machine-learning  amazon-web-services               backend   \n",
       "2          typescript                   c#                   NaN   \n",
       "3             mongodb           sql-server   amazon-web-services   \n",
       "4              hadoop                  NaN                   NaN   \n",
       "..                ...                  ...                   ...   \n",
       "614            python                  NaN                   NaN   \n",
       "615            hadoop                  NaN                   NaN   \n",
       "616         photoshop    adobe-illustrator                  html   \n",
       "617               NaN                  NaN                   NaN   \n",
       "618            spring                swing                   NaN   \n",
       "\n",
       "                                                 title  \\\n",
       "0    Paid Research Study for .NET Developers with M...   \n",
       "1    Applied Machine Learning Engineer/Working in J...   \n",
       "2    Machine Learning Programmer at DC Frontiers Pt...   \n",
       "3    Machine Learning Engineer at Innate, Inc. (Was...   \n",
       "4    Software Engineer, Machine Learning at Faceboo...   \n",
       "..                                                 ...   \n",
       "614       Production Engineer at Facebook (Boston, MA)   \n",
       "615  Data Science Manager, Analytics Ads & Business...   \n",
       "616  User Experience (UX) Designer Fully Cleared at...   \n",
       "617  Privacy Program Manager, Product at Facebook (...   \n",
       "618  Manager, Production Engineering at Facebook (B...   \n",
       "\n",
       "                                           description  \\\n",
       "0    <p>User Research International is a research c...   \n",
       "1    <p><strong>Non-Japanese speakers welcomed!</st...   \n",
       "2    <p>We are looking for an individual with exper...   \n",
       "3    <p>We are looking for a Machine Learning (ML) ...   \n",
       "4    <p>Facebook's mission is to give people the po...   \n",
       "..                                                 ...   \n",
       "614  <p>Facebook's mission is to give people the po...   \n",
       "615  <p>Facebook's mission is to give people the po...   \n",
       "616  <p>MasterPeace Solutions is seeking a <strong>...   \n",
       "617  <p>Facebook's mission is to give people the po...   \n",
       "618  <p>Facebook's mission is to give people the po...   \n",
       "\n",
       "                         pubDate         location/__text  \n",
       "0    Thu, 13 Feb 2020 23:13:27 Z                     NaN  \n",
       "1    Mon, 20 Jan 2020 03:53:01 Z            Tokyo, Japan  \n",
       "2    Mon, 03 Feb 2020 09:59:20 Z               Singapore  \n",
       "3    Fri, 07 Feb 2020 18:52:39 Z          Washington, DC  \n",
       "4    Wed, 12 Feb 2020 17:05:10 Z            New York, NY  \n",
       "..                           ...                     ...  \n",
       "614  Wed, 22 Jan 2020 20:50:24 Z              Boston, MA  \n",
       "615  Wed, 22 Jan 2020 20:50:57 Z          Menlo Park, CA  \n",
       "616  Thu, 16 Jan 2020 14:43:47 Z  Annapolis Junction, MD  \n",
       "617  Wed, 05 Feb 2020 11:35:24 Z          Menlo Park, CA  \n",
       "618  Thu, 06 Feb 2020 01:25:01 Z              Boston, MA  \n",
       "\n",
       "[619 rows x 10 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Extract 'author/name/__text','category/0', 'category/1', 'category/2', 'category/3', 'category/4',\n",
    "#'title', 'description', 'pubDate','location/__text',\n",
    "\n",
    "reduced_so_ml_df = df.loc[:, [\"author/name/__text\",\"category/0\", \"category/1\", \"category/2\", \"category/3\", \"category/4\",\n",
    "\"title\", \"description\", \"pubDate\",\"location/__text\"]]\n",
    "reduced_so_ml_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "reduced_so_ml_df=reduced_so_ml_df.rename(columns={\"author/name/__text\": \"company\", \"location/__text\": \"location\"})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Splitting 'location' column into two different columns :\n",
      "                       0       1\n",
      "0                   NaN     NaN\n",
      "1                 Tokyo   Japan\n",
      "2             Singapore    None\n",
      "3            Washington      DC\n",
      "4              New York      NY\n",
      "..                  ...     ...\n",
      "614              Boston      MA\n",
      "615          Menlo Park      CA\n",
      "616  Annapolis Junction      MD\n",
      "617          Menlo Park      CA\n",
      "618              Boston      MA\n",
      "\n",
      "[619 rows x 2 columns]\n"
     ]
    }
   ],
   "source": [
    "print(\"\\nSplitting 'location' column into two different columns :\\n\", \n",
    "                                  reduced_so_ml_df[\"location\"].str.split(\",\",expand=True))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "reduced_so_ml_df[['city','state']]=reduced_so_ml_df[\"location\"].str.split(\",\",expand=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>company</th>\n",
       "      <th>category/0</th>\n",
       "      <th>category/1</th>\n",
       "      <th>category/2</th>\n",
       "      <th>category/3</th>\n",
       "      <th>category/4</th>\n",
       "      <th>title</th>\n",
       "      <th>description</th>\n",
       "      <th>pubDate</th>\n",
       "      <th>location</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>User Research International</td>\n",
       "      <td>.net</td>\n",
       "      <td>c#</td>\n",
       "      <td>machine-learning</td>\n",
       "      <td>ml.net</td>\n",
       "      <td>ml.net-model-builder</td>\n",
       "      <td>Paid Research Study for .NET Developers with M...</td>\n",
       "      <td>&lt;p&gt;User Research International is a research c...</td>\n",
       "      <td>Thu, 13 Feb 2020 23:13:27 Z</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Medmain Inc.</td>\n",
       "      <td>python</td>\n",
       "      <td>api</td>\n",
       "      <td>machine-learning</td>\n",
       "      <td>amazon-web-services</td>\n",
       "      <td>backend</td>\n",
       "      <td>Applied Machine Learning Engineer/Working in J...</td>\n",
       "      <td>&lt;p&gt;&lt;strong&gt;Non-Japanese speakers welcomed!&lt;/st...</td>\n",
       "      <td>Mon, 20 Jan 2020 03:53:01 Z</td>\n",
       "      <td>Tokyo, Japan</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>Japan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>DC Frontiers Pte Ltd.</td>\n",
       "      <td>python</td>\n",
       "      <td>node.js</td>\n",
       "      <td>typescript</td>\n",
       "      <td>c#</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Machine Learning Programmer at DC Frontiers Pt...</td>\n",
       "      <td>&lt;p&gt;We are looking for an individual with exper...</td>\n",
       "      <td>Mon, 03 Feb 2020 09:59:20 Z</td>\n",
       "      <td>Singapore</td>\n",
       "      <td>Singapore</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Innate, Inc.</td>\n",
       "      <td>machine-learning</td>\n",
       "      <td>algorithm</td>\n",
       "      <td>mongodb</td>\n",
       "      <td>sql-server</td>\n",
       "      <td>amazon-web-services</td>\n",
       "      <td>Machine Learning Engineer at Innate, Inc. (Was...</td>\n",
       "      <td>&lt;p&gt;We are looking for a Machine Learning (ML) ...</td>\n",
       "      <td>Fri, 07 Feb 2020 18:52:39 Z</td>\n",
       "      <td>Washington, DC</td>\n",
       "      <td>Washington</td>\n",
       "      <td>DC</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>java</td>\n",
       "      <td>c++</td>\n",
       "      <td>hadoop</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Software Engineer, Machine Learning at Faceboo...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 12 Feb 2020 17:05:10 Z</td>\n",
       "      <td>New York, NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>NY</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>614</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>web-services</td>\n",
       "      <td>c++</td>\n",
       "      <td>python</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Production Engineer at Facebook (Boston, MA)</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 22 Jan 2020 20:50:24 Z</td>\n",
       "      <td>Boston, MA</td>\n",
       "      <td>Boston</td>\n",
       "      <td>MA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>615</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>r</td>\n",
       "      <td>sql</td>\n",
       "      <td>hadoop</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Data Science Manager, Analytics Ads &amp; Business...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 22 Jan 2020 20:50:57 Z</td>\n",
       "      <td>Menlo Park, CA</td>\n",
       "      <td>Menlo Park</td>\n",
       "      <td>CA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>616</th>\n",
       "      <td>MasterPeace Solutions</td>\n",
       "      <td>user-experience</td>\n",
       "      <td>css</td>\n",
       "      <td>photoshop</td>\n",
       "      <td>adobe-illustrator</td>\n",
       "      <td>html</td>\n",
       "      <td>User Experience (UX) Designer Fully Cleared at...</td>\n",
       "      <td>&lt;p&gt;MasterPeace Solutions is seeking a &lt;strong&gt;...</td>\n",
       "      <td>Thu, 16 Jan 2020 14:43:47 Z</td>\n",
       "      <td>Annapolis Junction, MD</td>\n",
       "      <td>Annapolis Junction</td>\n",
       "      <td>MD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>617</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>security</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Privacy Program Manager, Product at Facebook (...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Wed, 05 Feb 2020 11:35:24 Z</td>\n",
       "      <td>Menlo Park, CA</td>\n",
       "      <td>Menlo Park</td>\n",
       "      <td>CA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>618</th>\n",
       "      <td>Facebook</td>\n",
       "      <td>web-services</td>\n",
       "      <td>java</td>\n",
       "      <td>spring</td>\n",
       "      <td>swing</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Manager, Production Engineering at Facebook (B...</td>\n",
       "      <td>&lt;p&gt;Facebook's mission is to give people the po...</td>\n",
       "      <td>Thu, 06 Feb 2020 01:25:01 Z</td>\n",
       "      <td>Boston, MA</td>\n",
       "      <td>Boston</td>\n",
       "      <td>MA</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>619 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                         company        category/0 category/1  \\\n",
       "0    User Research International              .net         c#   \n",
       "1                   Medmain Inc.            python        api   \n",
       "2          DC Frontiers Pte Ltd.            python    node.js   \n",
       "3                   Innate, Inc.  machine-learning  algorithm   \n",
       "4                       Facebook              java        c++   \n",
       "..                           ...               ...        ...   \n",
       "614                     Facebook      web-services        c++   \n",
       "615                     Facebook                 r        sql   \n",
       "616        MasterPeace Solutions   user-experience        css   \n",
       "617                     Facebook          security        NaN   \n",
       "618                     Facebook      web-services       java   \n",
       "\n",
       "           category/2           category/3            category/4  \\\n",
       "0    machine-learning               ml.net  ml.net-model-builder   \n",
       "1    machine-learning  amazon-web-services               backend   \n",
       "2          typescript                   c#                   NaN   \n",
       "3             mongodb           sql-server   amazon-web-services   \n",
       "4              hadoop                  NaN                   NaN   \n",
       "..                ...                  ...                   ...   \n",
       "614            python                  NaN                   NaN   \n",
       "615            hadoop                  NaN                   NaN   \n",
       "616         photoshop    adobe-illustrator                  html   \n",
       "617               NaN                  NaN                   NaN   \n",
       "618            spring                swing                   NaN   \n",
       "\n",
       "                                                 title  \\\n",
       "0    Paid Research Study for .NET Developers with M...   \n",
       "1    Applied Machine Learning Engineer/Working in J...   \n",
       "2    Machine Learning Programmer at DC Frontiers Pt...   \n",
       "3    Machine Learning Engineer at Innate, Inc. (Was...   \n",
       "4    Software Engineer, Machine Learning at Faceboo...   \n",
       "..                                                 ...   \n",
       "614       Production Engineer at Facebook (Boston, MA)   \n",
       "615  Data Science Manager, Analytics Ads & Business...   \n",
       "616  User Experience (UX) Designer Fully Cleared at...   \n",
       "617  Privacy Program Manager, Product at Facebook (...   \n",
       "618  Manager, Production Engineering at Facebook (B...   \n",
       "\n",
       "                                           description  \\\n",
       "0    <p>User Research International is a research c...   \n",
       "1    <p><strong>Non-Japanese speakers welcomed!</st...   \n",
       "2    <p>We are looking for an individual with exper...   \n",
       "3    <p>We are looking for a Machine Learning (ML) ...   \n",
       "4    <p>Facebook's mission is to give people the po...   \n",
       "..                                                 ...   \n",
       "614  <p>Facebook's mission is to give people the po...   \n",
       "615  <p>Facebook's mission is to give people the po...   \n",
       "616  <p>MasterPeace Solutions is seeking a <strong>...   \n",
       "617  <p>Facebook's mission is to give people the po...   \n",
       "618  <p>Facebook's mission is to give people the po...   \n",
       "\n",
       "                         pubDate                location                city  \\\n",
       "0    Thu, 13 Feb 2020 23:13:27 Z                     NaN                 NaN   \n",
       "1    Mon, 20 Jan 2020 03:53:01 Z            Tokyo, Japan               Tokyo   \n",
       "2    Mon, 03 Feb 2020 09:59:20 Z               Singapore           Singapore   \n",
       "3    Fri, 07 Feb 2020 18:52:39 Z          Washington, DC          Washington   \n",
       "4    Wed, 12 Feb 2020 17:05:10 Z            New York, NY            New York   \n",
       "..                           ...                     ...                 ...   \n",
       "614  Wed, 22 Jan 2020 20:50:24 Z              Boston, MA              Boston   \n",
       "615  Wed, 22 Jan 2020 20:50:57 Z          Menlo Park, CA          Menlo Park   \n",
       "616  Thu, 16 Jan 2020 14:43:47 Z  Annapolis Junction, MD  Annapolis Junction   \n",
       "617  Wed, 05 Feb 2020 11:35:24 Z          Menlo Park, CA          Menlo Park   \n",
       "618  Thu, 06 Feb 2020 01:25:01 Z              Boston, MA              Boston   \n",
       "\n",
       "      state  \n",
       "0       NaN  \n",
       "1     Japan  \n",
       "2      None  \n",
       "3        DC  \n",
       "4        NY  \n",
       "..      ...  \n",
       "614      MA  \n",
       "615      CA  \n",
       "616      MD  \n",
       "617      CA  \n",
       "618      MA  \n",
       "\n",
       "[619 rows x 12 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reduced_so_ml_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "state\n",
       " AR                        1\n",
       " AZ                        1\n",
       " Brazil                    1\n",
       " CA                      221\n",
       " CO                        8\n",
       " DC                       15\n",
       " Denmark                   1\n",
       " Deutschland              10\n",
       " FL                        1\n",
       " Finland                   4\n",
       " France                    3\n",
       " GA                        3\n",
       " Germany                  31\n",
       " Hong Kong                 1\n",
       " IA                        1\n",
       " ID                        3\n",
       " IL                       20\n",
       " IN                        1\n",
       " Ireland                   1\n",
       " Japan                     4\n",
       " KY                        1\n",
       " MA                       28\n",
       " MD                       12\n",
       " MI                        3\n",
       " MO                        1\n",
       " Malaysia                  2\n",
       " NC                        7\n",
       " NJ                        8\n",
       " NM                        1\n",
       " NV                        1\n",
       " NY                       52\n",
       " New Zealand               1\n",
       " Norway                    8\n",
       " OH                        9\n",
       " OR                        3\n",
       " PA                       11\n",
       " Portugal                  1\n",
       " RI                        2\n",
       " Russia                    2\n",
       " SC                        1\n",
       " Spain                     1\n",
       " Switzerland               1\n",
       " TN                        1\n",
       " TX                       18\n",
       " Turkey                    1\n",
       " UK                       15\n",
       " UT                        9\n",
       " United Arab Emirates      1\n",
       " Uruguay                   1\n",
       " VA                       17\n",
       " WA                       38\n",
       "Name: city, dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "state_groups =reduced_so_ml_df.groupby(\"state\")\n",
    "state_groups[\"city\"].count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "#plt.bar(state_groups.index, job_cnt, color='r', alpha=0.5, align=\"center\")\n",
    "job_count=state_groups.count()\n",
    "job_cnt=job_count['city']\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([0,\n",
       "  1,\n",
       "  2,\n",
       "  3,\n",
       "  4,\n",
       "  5,\n",
       "  6,\n",
       "  7,\n",
       "  8,\n",
       "  9,\n",
       "  10,\n",
       "  11,\n",
       "  12,\n",
       "  13,\n",
       "  14,\n",
       "  15,\n",
       "  16,\n",
       "  17,\n",
       "  18,\n",
       "  19,\n",
       "  20,\n",
       "  21,\n",
       "  22,\n",
       "  23,\n",
       "  24,\n",
       "  25,\n",
       "  26,\n",
       "  27,\n",
       "  28,\n",
       "  29,\n",
       "  30,\n",
       "  31,\n",
       "  32,\n",
       "  33,\n",
       "  34,\n",
       "  35,\n",
       "  36,\n",
       "  37,\n",
       "  38,\n",
       "  39,\n",
       "  40,\n",
       "  41,\n",
       "  42,\n",
       "  43,\n",
       "  44,\n",
       "  45,\n",
       "  46,\n",
       "  47,\n",
       "  48,\n",
       "  49,\n",
       "  50],\n",
       " <a list of 51 Text xticklabel objects>)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.bar(job_count.index, job_count['city'], color='r', alpha=0.5, align=\"center\")\n",
    "\n",
    "plt.xlim(-0.75, len(job_count.index))\n",
    "plt.ylim(0, max(job_count['city'])+50)\n",
    "plt.title(\"job count by State/Country\")\n",
    "plt.xlabel(\"State/Country\")\n",
    "plt.ylabel(\"Number of Jobs\")\n",
    "\n",
    "plt.xticks(rotation=45)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
